"use strict";(self.webpackChunkdoeks_website=self.webpackChunkdoeks_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Introduction","href":"/data-on-eks/docs/intro","docId":"intro"},{"type":"category","label":"Amazon EMR on EKS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/data-on-eks/docs/amazon-emr-on-eks/","docId":"amazon-emr-on-eks/index"},{"type":"link","label":"EMR on EKS with Karpenter","href":"/data-on-eks/docs/amazon-emr-on-eks/emr-eks-karpenter","docId":"amazon-emr-on-eks/emr-eks-karpenter"},{"type":"link","label":"EMR on EKS with Fargate","href":"/data-on-eks/docs/amazon-emr-on-eks/emr-eks-fargate","docId":"amazon-emr-on-eks/emr-eks-fargate"},{"type":"link","label":"EMR on EKS with ACK Controller","href":"/data-on-eks/docs/amazon-emr-on-eks/emr-eks-ack","docId":"amazon-emr-on-eks/emr-eks-ack"},{"type":"link","label":"EMR on EKS with CDK","href":"/data-on-eks/docs/amazon-emr-on-eks/emr-eks-cdk","docId":"amazon-emr-on-eks/emr-eks-cdk"}],"href":"/data-on-eks/docs/category/amazon-emr-on-eks"},{"type":"category","label":"Data Analytics on EKS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/data-on-eks/docs/data-analytics/","docId":"data-analytics/index"},{"type":"link","label":"Spark Operator with YuniKorn","href":"/data-on-eks/docs/data-analytics/spark-operator-yunikorn","docId":"data-analytics/spark-operator-yunikorn"},{"type":"link","label":"Observability Spark on EKS","href":"/data-on-eks/docs/data-analytics/observability-spark-on-eks","docId":"data-analytics/observability-spark-on-eks"}],"href":"/data-on-eks/docs/category/data-analytics-on-eks"},{"type":"category","label":"AI/ML on EKS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/data-on-eks/docs/ai-ml/","docId":"ai-ml/index"},{"type":"link","label":"Ray on EKS","href":"/data-on-eks/docs/ai-ml/ray","docId":"ai-ml/ray"},{"type":"link","label":"Kubeflow on AWS","href":"/data-on-eks/docs/ai-ml/kubeflow","docId":"ai-ml/kubeflow"}],"href":"/data-on-eks/docs/category/aiml-on-eks"},{"type":"category","label":"Job Schedulers on EKS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/data-on-eks/docs/job-schedulers/","docId":"job-schedulers/index"},{"type":"link","label":"Amazon MWAA","href":"/data-on-eks/docs/job-schedulers/aws-managed-airflow","docId":"job-schedulers/aws-managed-airflow"},{"type":"link","label":"Airflow on EKS","href":"/data-on-eks/docs/job-schedulers/self-managed-airflow","docId":"job-schedulers/self-managed-airflow"},{"type":"link","label":"Argo Workflows on EKS","href":"/data-on-eks/docs/job-schedulers/argo-workflows-eks","docId":"job-schedulers/argo-workflows-eks"}],"href":"/data-on-eks/docs/category/job-schedulers-on-eks"},{"type":"category","label":"Streaming Platforms on EKS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/data-on-eks/docs/streaming-platforms/","docId":"streaming-platforms/index"},{"type":"link","label":"Flink Operator on EKS","href":"/data-on-eks/docs/streaming-platforms/flink","docId":"streaming-platforms/flink"},{"type":"link","label":"Kafka on EKS","href":"/data-on-eks/docs/streaming-platforms/kafka","docId":"streaming-platforms/kafka"},{"type":"link","label":"Apache NiFi on EKS","href":"/data-on-eks/docs/streaming-platforms/nifi","docId":"streaming-platforms/nifi"}],"href":"/data-on-eks/docs/category/streaming-platforms-on-eks"},{"type":"category","label":"Distributed Databases on EKS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/data-on-eks/docs/distributed-databases/","docId":"distributed-databases/index"},{"type":"link","label":"CloudNativePG PostgreSQL","href":"/data-on-eks/docs/distributed-databases/cloudnative-postgres","docId":"distributed-databases/cloudnative-postgres"}],"href":"/data-on-eks/docs/category/distributed-databases-on-eks"},{"type":"link","label":"Troubleshooting","href":"/data-on-eks/docs/troubleshooting","docId":"troubleshooting"}]},"docs":{"ai-ml/index":{"id":"ai-ml/index","title":"AI/ML Platforms on EKS","description":"Running AI/ML platforms on Kubernetes can greatly simplify and automate the deployment, scaling, and management of these complex applications. There are a number of popular tools and technologies that have emerged to support this use case, including TensorFlow, PyTorch and KubeFlow.","sidebar":"docs"},"ai-ml/kubeflow":{"id":"ai-ml/kubeflow","title":"Kubeflow on AWS","description":"Introduction","sidebar":"docs"},"ai-ml/ray":{"id":"ai-ml/ray","title":"Ray on EKS","description":"This blueprint should be considered as experimental and should only be used for proof of concept.","sidebar":"docs"},"amazon-emr-on-eks/emr-eks-ack":{"id":"amazon-emr-on-eks/emr-eks-ack","title":"ACK Controller for EMR on EKS","description":"Introduction","sidebar":"docs"},"amazon-emr-on-eks/emr-eks-cdk":{"id":"amazon-emr-on-eks/emr-eks-cdk","title":"EMR on EKS with CDK blueprint","description":"Introduction","sidebar":"docs"},"amazon-emr-on-eks/emr-eks-fargate":{"id":"amazon-emr-on-eks/emr-eks-fargate","title":"EMR Virtual Cluster on EKS Fargate","description":"This example shows how to provision a serverless cluster (serverless data plane) using Fargate Profiles to support EMR on EKS virtual clusters.","sidebar":"docs"},"amazon-emr-on-eks/emr-eks-karpenter":{"id":"amazon-emr-on-eks/emr-eks-karpenter","title":"EMR on EKS with [Karpenter](https://karpenter.sh/)","description":"Introduction","sidebar":"docs"},"amazon-emr-on-eks/index":{"id":"amazon-emr-on-eks/index","title":"Amazon EMR on EKS","description":"Amazon EMR on EKS enables you to submit Apache Spark jobs on-demand on Amazon Elastic Kubernetes Service (EKS) clusters. With EMR on EKS, you can consolidate analytical workloads with your other Kubernetes-based applications on the same Amazon EKS cluster to improve resource utilization and simplify infrastructure management.","sidebar":"docs"},"data-analytics/index":{"id":"data-analytics/index","title":"Data Analytics on EKS","description":"Running data analytics tools on Kubernetes can provide a number of benefits for organizations looking to extract insights from large and complex data sets. Tools such as Apache Spark and DASK are designed to run on a cluster of machines, making them well-suited for deployment on Kubernetes.","sidebar":"docs"},"data-analytics/observability-spark-on-eks":{"id":"data-analytics/observability-spark-on-eks","title":"Observability Spark on EKS","description":"Introduction","sidebar":"docs"},"data-analytics/spark-operator-yunikorn":{"id":"data-analytics/spark-operator-yunikorn","title":"Spark Operator with YuniKorn","description":"Introduction","sidebar":"docs"},"distributed-databases/cloudnative-postgres":{"id":"distributed-databases/cloudnative-postgres","title":"Deploying PostgreSQL Database on EKS using CloudNativePG Operator","description":"Introduction","sidebar":"docs"},"distributed-databases/index":{"id":"distributed-databases/index","title":"Distributed Databases on EKS","description":"Note: The blueprints for distributed databases and query engines are currently in the process of development.","sidebar":"docs"},"intro":{"id":"intro","title":"Introduction","description":"Data on Amazon EKS(DoEKS) - A tool for building aws managed and self-managed scalable data platforms on Amazon EKS. With DoEKS, You have access to:","sidebar":"docs"},"job-schedulers/argo-workflows-eks":{"id":"job-schedulers/argo-workflows-eks","title":"Argo Workflows on EKS","description":"Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. It is implemented as a Kubernetes CRD (Custom Resource Definition). As a result, Argo workflows can be managed using kubectl and natively integrates with other Kubernetes services such as volumes, secrets, and RBAC.","sidebar":"docs"},"job-schedulers/aws-managed-airflow":{"id":"job-schedulers/aws-managed-airflow","title":"Amazon MWAA","description":"Amazon Managed Workflows for Apache Airflow (MWAA) is a managed orchestration service for Apache Airflow that makes it easier to set up and operate end-to-end data pipelines in the cloud at scale. Apache Airflow is an open-source tool used to programmatically author, schedule, and monitor sequences of processes and tasks referred to as \u201cworkflows.\u201d With Managed Workflows, you can use Airflow and Python to create workflows without having to manage the underlying infrastructure for scalability, availability, and security.","sidebar":"docs"},"job-schedulers/index":{"id":"job-schedulers/index","title":"Job Schedulers","description":"Job schedulers are an essential component of many organizations\' infrastructure, helping to automate and manage complex workflows. When deployed on Kubernetes, job schedulers can take advantage of the platform\'s features such as automatic scaling, rolling updates, and self-healing capabilities to ensure high availability and reliability. Tools like Apache Airflow, Argo Workflow, and Amazon MWAA provide a simple and efficient way to manage and schedule jobs on a Kubernetes cluster.","sidebar":"docs"},"job-schedulers/self-managed-airflow":{"id":"job-schedulers/self-managed-airflow","title":"Airflow on EKS","description":"This pattern deploys the production ready Self-managed Apache Airflow deployment on EKS.","sidebar":"docs"},"streaming-platforms/flink":{"id":"streaming-platforms/flink","title":"Flink Operator on EKS","description":"Please note that we are working on adding more features to this blueprint such as Flink examples with multiple connectors, Ingress for WebUI, Grafana dashboards etc.","sidebar":"docs"},"streaming-platforms/index":{"id":"streaming-platforms/index","title":"Streaming Platforms on EKS","description":"Note: The blueprints for streaming platforms are currently in the process of development.","sidebar":"docs"},"streaming-platforms/kafka":{"id":"streaming-platforms/kafka","title":"Kafka on EKS","description":"Apache Kafka is an open-source distributed event streaming platform used by thousands of companies for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.","sidebar":"docs"},"streaming-platforms/nifi":{"id":"streaming-platforms/nifi","title":"Apache NiFi on EKS","description":"Introduction","sidebar":"docs"},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting","description":"You will find troubleshooting info for Data on Amazon EKS(DoEKS) installation issues","sidebar":"docs"}}}')}}]);