<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://awslabs.github.io/data-on-eks/blog</id>
    <title>Data on EKS (DoEKS) Blog</title>
    <updated>2022-11-28T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://awslabs.github.io/data-on-eks/blog"/>
    <subtitle>Data on EKS (DoEKS) Blog</subtitle>
    <entry>
        <title type="html"><![CDATA[EMR on EKS Data Platform with AWS CDK]]></title>
        <id>https://awslabs.github.io/data-on-eks/blog/Data Platform with AWS CDK</id>
        <link href="https://awslabs.github.io/data-on-eks/blog/Data Platform with AWS CDK"/>
        <updated>2022-11-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2><p>In this blog we will show you how you can use AWS CDK and the <a href="https://aws.amazon.com/blogs/opensource/adding-cdk-constructs-to-the-aws-analytics-reference-architecture/" target="_blank" rel="noopener noreferrer">Analytics Reference Architecture</a> (ARA) library to deploy an end to end data analytics platform. This platform will allow you to run Spark interactive Session in Jupyter notebook with EMR Studio supported by EMR on EKS and run Spark jobs with EMR on EKS. The architecture below shows the infrasturcture you will deploy using the CDK and ARA library.</p><p><img loading="lazy" alt="emr-eks-studio-ara-architecture" src="/data-on-eks/assets/images/emr-eks-studio-cdk-ara-48d05caba069c27f9fea7351e13bba60.png" width="1662" height="980" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="analytics-reference-architecture"><a href="https://aws.amazon.com/blogs/opensource/adding-cdk-constructs-to-the-aws-analytics-reference-architecture/" target="_blank" rel="noopener noreferrer">Analytics Reference Architecture</a><a href="#analytics-reference-architecture" class="hash-link" aria-label="Direct link to analytics-reference-architecture" title="Direct link to analytics-reference-architecture">​</a></h2><p>AWS Analytics Reference Architecture (ARA) exposes set fo reusable core components in an AWS CDK library, currently available in Typescript and Python. This library contains AWS CDK constructs (L3) that can be used to quickly provision analytics solutions in demos, prototypes, proofs of concept, and end-to-end reference architectures. The API of ARA Library is defined <a href="https://constructs.dev/packages/aws-analytics-reference-architecture/v/2.4.11?lang=typescript" target="_blank" rel="noopener noreferrer">here</a>.</p><p>In our case the library help you deploy an infrastructure optimised for Apache Spark running on EKS leveraging EMR on EKS. The infrastructure will out of the box provide you with pod collocation to reduce network traffic, deploy nodegroup in a single AZ to reduce cross AZ traffic during shuffle, use dedicated instances for EMR on EKS, use optimized instances for memory intensive jobs, use spot and on-demand instances for non-critical job and for critical jobs.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h2><p>Ensure that you have installed the following tools on your machine.</p><ol><li><a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html" target="_blank" rel="noopener noreferrer">aws cli</a></li><li><a href="https://Kubernetes.io/docs/tasks/tools/" target="_blank" rel="noopener noreferrer">kubectl</a></li><li><a href="https://docs.aws.amazon.com/cdk/v2/guide/getting_started.html#getting_started_install" target="_blank" rel="noopener noreferrer">CDK</a></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="solution">Solution<a href="#solution" class="hash-link" aria-label="Direct link to Solution" title="Direct link to Solution">​</a></h2><p>To deploy the data platform we will use an example in the <code>Analytics Reference Architecture</code>. The example is in the directory <code>examples/emr-eks-app</code> that you will find in the repository you will clone below.</p><p>Clone the repository</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> clone https://github.com/aws-samples/aws-analytics-reference-architecture.git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This solution will deploy the following:</p><ul><li><p>EKS cluster and a set of Nodegroups:</p><ul><li>Managed Nodegroup called tooling for running system critical pods. e.g., Cluster Autoscaler, CoreDNS, EBS CSI Driver..</li><li>Three Managed Nodegroup called critical for critical jobs, each in one AZ, this nodegroup use on-demand instances</li><li>Three Managed Nodegroup called non-critical for non-critical jobs, each in one AZ, this nodegroup use spot instances</li><li>Three Managed Nodegroup called notebook-driver for non-critical jobs, each in one AZ, this nodegroup use on-demand instances to have a stable driver.</li><li>Three Managed Nodegroup called notebook-executor for non-critical jobs, each in one AZ, this nodegroup use spot instances instances for executors.</li></ul></li><li><p>Enable EKS Cluster to be with with EMR on EKS service</p></li><li><p>EMR Virtual Cluster called <code>batchjob</code>, used to submitted jobs</p></li><li><p>EMR Virtual Cluster called <code>emrvcplatform</code>, used to submitted jobs</p></li><li><p>EMR Studio called <code>platform</code></p></li><li><p>A <code>managed endpoint</code>, called <code>platform-myendpoint</code> , to use with Jupyter notebooks you will create in the EMR Studio</p></li><li><p><a href="https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/iam-execution-role.html" target="_blank" rel="noopener noreferrer">Execution role</a> to use when submiting jobs with EMR on EKS <code>start-job-run</code></p></li><li><p>Execution role to use with managed endpoint.  </p></li><li><p>pod templates stored in an S3 bucket called "EKS-CLUSTER-NAME-emr-eks-assets-ACCOUNT-ID-REGION"</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="customize">Customize<a href="#customize" class="hash-link" aria-label="Direct link to Customize" title="Direct link to Customize">​</a></h3><p>The infrastructure described above is defined in <code>emr-eks-app/lib/emr-eks-app-stack.ts</code>. If you want to customize it you can change the values in it. For example, you can chose not to create the default nodegroup to use for <code>jobs</code>, in this case you can set the <code>defaultNodeGroups</code> parameter to <code>false</code> in the <code>EmrEksCluster</code>. You can also call the <code>addEmrEksNodegroup</code> method to define your own nodegroups with specific labels, instances or taints. The <code>addEmrEksNodegroup</code> method is defined <a href="https://constructs.dev/packages/aws-analytics-reference-architecture/v/2.4.11/api/EmrEksCluster?lang=typescript#addEmrEksNodegroup" target="_blank" rel="noopener noreferrer">here</a>.</p><p>You can also create your own execution role through the <code>createExecutionRole</code> <a href="https://constructs.dev/packages/aws-analytics-reference-architecture/v/2.4.11/api/EmrEksCluster?lang=typescript#createExecutionRole" target="_blank" rel="noopener noreferrer">method</a> or create a managed endpoint to attach it to an EMR Studio you deployed outside of the ARA library.</p><p>In order to simplify this example we use IAM authentication with IAM user for <code>EMR Studio</code>. If you would like to use a user in the <code>AWS IAM Identity Center</code> you can change <code>studioAuthMode</code> in the <code>NotebookPlatform</code> construct. Below you will can see the code snipet that you need to change.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> notebookPlatform </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">ara</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NotebookPlatform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'platform-notebook'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      emrEks</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> emrEks</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      eksNamespace</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'dataanalysis'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      studioName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'platform'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      studioAuthMode</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ara</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StudioAuthMode</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">IAM</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="deploy">Deploy<a href="#deploy" class="hash-link" aria-label="Direct link to Deploy" title="Direct link to Deploy">​</a></h3><p>Before you run the solution, you <strong>MUST</strong> change the <code>eksAdminRoleArn</code> of the <code>props</code> object of <code>EmrEksCluster</code> in <code>lib/emr-eks-app-stack.ts</code>. This role allows you to interact manage EKS cluster and should have be allowed at least the IAM action <code>eks:AccessKubernetesApi</code>. You need to also change the <code>identityName</code> in the <code>addUser</code> method of the <code>NotebookPlatform</code> construct. The identityName <strong>MUST BE</strong> a valid IAM username that you use. Below you will can see the code snipet that you need to change.</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">notebookPlatform</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addUser</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        identityName</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        notebookManagedEndpoints</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        emrOnEksVersion</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'emr-6.8.0-latest'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        executionPolicy</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> emrEksPolicy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        managedEndpointName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'myendpoint'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Last you shold also update the IAM policies passed to the <code>createExecutionRole</code>, if you want to process data that is in S3 buckets that you own.</p><p>Navigate into one of the example directories and run <code>cdk synth --profile YOUR-AWS-PROFILE</code></p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">cd</span><span class="token plain"> examples/emr-eks-app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cdk synth --profile YOUR-AWS-PROFILE</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once the synth is completed you can deploy the infrastructrue with the following command:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cdk deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>At the end of the deployment you will see output like follow:</p><p><img loading="lazy" alt="ara-cdk-output" src="/data-on-eks/assets/images/cdk-deploy-result-7f0116c1481ceb53ea9a11d4fc0c7230.png" width="941" height="156" class="img_ev3q"></p><p>In the output you will find job sample configurations with the best practices for Spark on Kubernetes like <code>dynamicAllocation</code> and <code>pod collocation</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="job-submission">Job submission<a href="#job-submission" class="hash-link" aria-label="Direct link to Job submission" title="Direct link to Job submission">​</a></h3><p>In this example we will use the <code>crittical-job</code> job configuration to submit a job using that will compute <code>pi</code> using that is part of Spark distribution.
To submit a job we will use Below you use <code>start-job-run</code> command with AWS CLI.</p><p>Before you run the command below, make sure to change update the following parameters with the on created by your own deployment.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">- &lt;CLUSTER-ID&gt; – The EMR virtual cluster ID, which you get from the AWS CDK output</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- &lt;SPARK-JOB-NAME&gt; – The name of your Spark job</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- &lt;ROLE-ARN&gt; – The execution role you created, which you get from the AWS CDK output</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- &lt;S3URI-CRITICAL-DRIVER&gt; – The Amazon S3 URI of the driver pod template, which you get from the AWS CDK output</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- &lt;S3URI-CRITICAL-EXECUTOR&gt; – The Amazon S3 URI of the executor pod template, which you get from the AWS CDK output</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- &lt;Log_Group_Name&gt; – Your CloudWatch log group name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- &lt;Log_Stream_Prefix&gt; – Your CloudWatch log stream prefix</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>AWS CLI for start-job-run command</summary><div><div class="collapsibleContent_i85q"><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws emr-containers start-job-run </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --virtual-cluster-id CLUSTER-ID</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">SPARK-</span><span class="token environment constant" style="color:#36acaa">JOB</span><span class="token plain">-NAME</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --execution-role-arn ROLE-ARN </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --release-label emr-6.8.0-latest </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --job-driver </span><span class="token string" style="color:#e3116c">'{</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        "sparkSubmitJobDriver":{</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        "entryPoint": "local:///usr/lib/spark/examples/src/main/python/pi.py"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">    }'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --configuration-overrides </span><span class="token string" style="color:#e3116c">'{</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        "applicationConfiguration": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">            {</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                "classification": "spark-defaults",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                "properties": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.hadoop.hive.metastore.client.factory.class": "com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.sql.catalogImplementation": "hive",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.dynamicAllocation.enabled":"true",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.dynamicAllocation.minExecutors": "8",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.dynamicAllocation.maxExecutors": "40",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.kubernetes.allocation.batch.size": "8",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.executor.cores": "8",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.kubernetes.executor.request.cores": "7",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.executor.memory": "28G",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.driver.cores": "2",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.kubernetes.driver.request.cores": "2",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.driver.memory": "6G",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.dynamicAllocation.executorAllocationRatio": "1",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.dynamicAllocation.shuffleTracking.enabled": "true",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.dynamicAllocation.shuffleTracking.timeout": "300s",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.kubernetes.driver.podTemplateFile": "s3://EKS-CLUSTER-NAME-emr-eks-assets-ACCOUNT-ID-REGION/EKS-CLUSTER-NAME/pod-template/critical-driver.yaml",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                    "spark.kubernetes.executor.podTemplateFile": "s3://EKS-CLUSTER-NAME-emr-eks-assets-ACCOUNT-ID-REGION/EKS-CLUSTER-NAME/pod-template/critical-executor.yaml"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        "monitoringConfiguration": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">            "cloudWatchMonitoringConfiguration": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                "logGroupName": "Log_Group_Name",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">                "logStreamNamePrefix": "Log_Stream_Prefix"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">    }'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details><p>Verify the job execution</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pods --namespace</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">batchjob -w</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="interactive-session">Interactive session<a href="#interactive-session" class="hash-link" aria-label="Direct link to Interactive session" title="Direct link to Interactive session">​</a></h3><p>To use an interactive session, you should log in to the EMR Studio instance with the URL provided to you at the end of <code>cdk deploy</code>.
This link will be in the form of <code>https://es-xxxxx/emrstudio-prod-REGION.amazonaws.com</code>.
Once you click on the link you will be see a log in page where you <strong>MUST</strong> sign-in with the username provided to the <code>addUser</code> method. When you sign in you should follow these steps.</p><ol><li>Create workspace, this will start for a Jupyter notebook</li><li>Connect to the Jupter notebook</li><li>Attach to a Virtual cluster, this would be have the following name "emrvcplatform" and chose an endpoint called "platform-myendpoint"</li><li>Open a notebook and select the PySpark kernel</li><li>You are now ready to perform analyse your data with Spark running on EMR on EKS.</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cleanup">Cleanup<a href="#cleanup" class="hash-link" aria-label="Direct link to Cleanup" title="Direct link to Cleanup">​</a></h2><p>To clean up your environment, you call the command below. This will destroy the EKS cluster with Node groups and VPC</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cdk destroy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>To avoid unwanted charges to your AWS account, delete all the AWS resources created during this deployment</p></div></div>]]></content>
        <author>
            <name>aws</name>
            <uri>https://github.com/aws/aws-emr-containers-best-practices</uri>
        </author>
        <category label="emr-on-eks" term="emr-on-eks"/>
        <category label="Spark" term="Spark"/>
        <category label="emr-studio" term="emr-studio"/>
        <category label="CDK" term="CDK"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[EMR on EKS Best Practices]]></title>
        <id>https://awslabs.github.io/data-on-eks/blog/EMR on EKS Best Practices</id>
        <link href="https://awslabs.github.io/data-on-eks/blog/EMR on EKS Best Practices"/>
        <updated>2022-09-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[EMR Containers Best Practices Guides]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="emr-containers-best-practices-guides"><a href="https://aws.github.io/aws-emr-containers-best-practices/" target="_blank" rel="noopener noreferrer">EMR Containers Best Practices Guides</a><a href="#emr-containers-best-practices-guides" class="hash-link" aria-label="Direct link to emr-containers-best-practices-guides" title="Direct link to emr-containers-best-practices-guides">​</a></h2><p>Amazon EMR on Amazon EKS enables you to submit Apache Spark jobs on demand on Amazon Elastic Kubernetes Service (EKS) without provisioning clusters. With EMR on EKS, you can consolidate analytical workloads with your other Kubernetes-based applications on the same Amazon EKS cluster to improve resource utilization and simplify infrastructure management.</p><p>This link provides the best practices and templates to get started with Amazon EMR on EKS. We publish this guide on GitHub so we could iterate the content quickly, provide timely and effective recommendations for variety of concerns, and easily incorporate suggestions from the broader community.</p><p>Checkout the EMR on EKS Best practices GitHub docs <a href="https://aws.github.io/aws-emr-containers-best-practices/" target="_blank" rel="noopener noreferrer">here</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="architecture">Architecture<a href="#architecture" class="hash-link" aria-label="Direct link to Architecture" title="Direct link to Architecture">​</a></h3><p>The following diagram illustrates the solution architecture Amazon EMR on EKS.</p><p><img loading="lazy" alt="emr-eks-architecture" src="/data-on-eks/assets/images/emr-eks-architecture-4ef17f73412d9a03f9de6d2011934a3e.png" width="671" height="736" class="img_ev3q"></p>]]></content>
        <author>
            <name>aws</name>
            <uri>https://github.com/aws/aws-emr-containers-best-practices</uri>
        </author>
        <category label="emr-on-eks" term="emr-on-eks"/>
        <category label="Spark" term="Spark"/>
        <category label="Observability" term="Observability"/>
        <category label="Amazon Managed Prometheus" term="Amazon Managed Prometheus"/>
        <category label="Amazon Managed Grafana" term="Amazon Managed Grafana"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Observability EMR on EKS]]></title>
        <id>https://awslabs.github.io/data-on-eks/blog/Observability EMR on EKS</id>
        <link href="https://awslabs.github.io/data-on-eks/blog/Observability EMR on EKS"/>
        <updated>2022-05-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Monitoring Amazon EMR on EKS with Amazon Managed Prometheus and Amazon Managed Grafana]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana"><a href="https://aws.amazon.com/blogs/mt/monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana/" target="_blank" rel="noopener noreferrer">Monitoring Amazon EMR on EKS with Amazon Managed Prometheus and Amazon Managed Grafana</a><a href="#monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana" class="hash-link" aria-label="Direct link to monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana" title="Direct link to monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana">​</a></h2><p>In this post, we will learn to build end-to-end observability for EMR on EKS Spark workloads by leveraging Amazon Managed Service for Prometheus to collect and store the metrics generated by Spark Applications. We will then use Amazon Managed Grafana to build dashboards for monitoring use cases</p><p>Checkout the full blog <a href="https://aws.amazon.com/blogs/mt/monitoring-amazon-emr-on-eks-with-amazon-managed-prometheus-and-amazon-managed-grafana/" target="_blank" rel="noopener noreferrer">here</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="architecture">Architecture<a href="#architecture" class="hash-link" aria-label="Direct link to Architecture" title="Direct link to Architecture">​</a></h3><p>The following diagram illustrates the solution architecture for scraping Spark Driver and Executors’ metrics, as well as writing to Amazon Managed Service for Prometheus.</p><p><img loading="lazy" alt="emr-eks-amp-amg" src="/data-on-eks/assets/images/emr-eks-amp-amg-0effdc2ebf0db702009a52b77af6ca21.png" width="1084" height="637" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="grafana-dashboard-for-spark">Grafana Dashboard for Spark<a href="#grafana-dashboard-for-spark" class="hash-link" aria-label="Direct link to Grafana Dashboard for Spark" title="Direct link to Grafana Dashboard for Spark">​</a></h3><p>The following Grafana dashboard displays the EMR on EKS Spark job metrics with Driver and Executor details.</p><p><img loading="lazy" alt="emr-eks-amp-amg-output" src="/data-on-eks/assets/images/emr-eks-amp-amg-output-fa8bc3f3183fd9d820744778a6a7888b.png" width="1346" height="817" class="img_ev3q"></p>]]></content>
        <author>
            <name>Vara Bonthu</name>
            <uri>https://github.com/vara-bonthu</uri>
        </author>
        <category label="emr-on-eks" term="emr-on-eks"/>
        <category label="Spark" term="Spark"/>
        <category label="Observability" term="Observability"/>
        <category label="Amazon Managed Prometheus" term="Amazon Managed Prometheus"/>
        <category label="Amazon Managed Grafana" term="Amazon Managed Grafana"/>
    </entry>
</feed>