#In this example, the 'check-status' step is recursively repeated until
# the result is finished
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: api-call-recursive-
spec:
  entrypoint: trigger-job
  templates:
  - name: trigger-job
    steps:
    - - name: call-submitjob-api  # 1 submit job
        template: call-api
        arguments:
          parameters: [{name: url, value: "https://www.google.com"}]
    - - name: check-status # keep checking job status
        template: check-status
        arguments:
          parameters: [{name: url, value: "https://www.google.com"}]

  - name: check-status # recursive
    inputs:
    parameters:
      - name: url
    steps:
    - - name: call-jobstatus-api
        template: call-api # call job status api
        arguments:
          parameters: [{name: url, value: "{{inputs.parameters.url}}"}]
    - - name: wait 
        template: wait
    - - name: finished
        template: finished # api returns finished then exist
        when: "{{steps.start-call.outputs.result}} == finished"
      - name: processing
        template: check-status # go back if returns processing
        when: "{{steps.start-call.outputs.result}} == processing"

  - name: call-api
    inputs:
      parameters:
        - name: url
    http:
      successCondition: "response.statusCode == 201" # Succeed only if status is 201, otherwise fail
      url: "{{inputs.parameters.url}}"
  - name: finished
    container:
      image: registry-vpc.cn-beijing.aliyuncs.com/galixir/whalesay:latest
      command: [sh, -c]
      args: ["echo \"it was heads\""]
  - name: wait
    suspend:
      duration: "20"    # Must be a string. Default unit is seconds. Could also be a Duration, e.g.: "2m", "6h", "1d"



     # http output https://github.com/argoproj/argo-workflows/discussions/7376